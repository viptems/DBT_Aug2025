-- Subquery
SELECT c.name, o.amount
FROM customers c
JOIN orders o ON c.customer_id = o.customer_id
WHERE o.amount > (
    SELECT AVG(amount) FROM orders
);

------------------------------------------------------------------
SELECT c.name, o.amount
FROM customers c
JOIN orders o ON c.customer_id = o.customer_id
WHERE o.amount < (
    SELECT AVG(amount) FROM orders
);


------------------------------------------------------------------
SELECT customer_id, AVG(amount) FROM orders group by customer_id;

SELECT c.name, o.amount
FROM customers c
JOIN orders o ON c.customer_id = o.customer_id
WHERE o.amount > (
    SELECT customer_id, AVG(amount) FROM orders group by customer_id
);
ERROR 1241 (21000): Operand should contain 1 column(s)
------------------------------------------------------------------
SELECT c.name, o.amount
FROM customers c
JOIN orders o ON c.customer_id = o.customer_id
WHERE o.amount > (
    SELECT AVG(amount) FROM orders group by customer_id
);
Subquery returns more than 1 row

------------------------------------------------------------------
SELECT c.name, o.amount
FROM customers c
JOIN orders o ON c.customer_id = o.customer_id
WHERE o.amount in (
    SELECT AVG(amount) FROM orders
);

Empty set (0.01 sec)

------------------------------------------------------------------

SELECT c.name, o.amount
FROM customers c
JOIN orders o ON c.customer_id = o.customer_id
WHERE o.amount in (
    SELECT max(amount) FROM orders
);

+------------+---------+
| name       | amount  |
+------------+---------+
| Chetan Rao | 2100.00 |
+------------+---------+
1 row in set (0.00 sec)

mysql> select customer_id, max(amount) from orders group by customer_id;
+-------------+-------------+
| customer_id | max(amount) |
+-------------+-------------+
|           1 |     1200.00 |
|           2 |      450.00 |
|           3 |     2100.00 |
|           4 |      300.00 |
|           5 |      890.00 |
+-------------+-------------+
5 rows in set (0.00 sec)

---------------------------------------------------
SELECT c.name, o.amount
FROM customers c
JOIN orders o ON c.customer_id = o.customer_id
WHERE o.amount in (
    SELECT customer_id, max(amount) FROM orders group by customer_id
);

ERROR 1241 (21000): Operand should contain 1 column(s)
------------------------------------------------------------

SELECT c.name, o.amount
FROM customers c
JOIN orders o ON c.customer_id = o.customer_id
WHERE o.amount in (
    SELECT max(amount) FROM orders group by customer_id
);
+-------------+---------+
| name        | amount  |
+-------------+---------+
| Amit Sharma | 1200.00 |
| Chetan Rao  | 2100.00 |
| Divya Menon |  300.00 |
| Esha Khan   |  890.00 |
| Bhavna Iyer |  450.00 |
+-------------+---------+
5 rows in set (0.00 sec)
---------------------------------------------------------
SELECT c.name, o.amount
FROM customers c
JOIN orders o ON c.customer_id = o.customer_id
WHERE o.amount in ( 1200, 2100, 300,890,450);
);




--------------------------
SELECT name
FROM customers
WHERE customer_id IN (
    SELECT DISTINCT customer_id
    FROM orders
    WHERE status = 'PAID'
);
+-------------+
| name        |
+-------------+
| Amit Sharma |
| Bhavna Iyer |
| Chetan Rao  |
| Divya Menon |
+-------------+
4 rows in set (0.01 sec)

SELECT name
FROM customers
WHERE customer_id IN (
    SELECT customer_id
    FROM orders
    WHERE status = 'PAID'
);
 -- = any(1,1,3,4,2)

----------------------------------

SELECT name
FROM customers
WHERE customer_id = ANY (
    SELECT DISTINCT customer_id
    FROM orders
    WHERE status = 'PAID'
);



-- = ANY(1,2,3,4)


---------------------------------------
SELECT name
FROM customers
WHERE customer_id > ANY (
    SELECT DISTINCT customer_id
    FROM orders
    WHERE status = 'PAID'
);

+-------------+
| name        |
+-------------+
| Bhavna Iyer |
| Chetan Rao  |
| Divya Menon |
| Esha Khan   |
| Mohini      |
+-------------+
5 rows in set (0.01 sec)







-----------------------------------------------
SELECT name
FROM customers
WHERE customer_id < ANY (
    SELECT DISTINCT customer_id
    FROM orders
    WHERE status = 'PAID'
);
+-------------+
| name        |
+-------------+
| Amit Sharma |
| Bhavna Iyer |
| Chetan Rao  |
+-------------+
3 rows in set (0.00 sec)


SELECT DISTINCT customer_id
    FROM orders
    WHERE status = 'PAID';

+-------------+
| customer_id |
+-------------+
|           1 |
|           2 |
|           3 |
|           4 |
+-------------+
4 rows in set (0.00 sec)


SELECT name
FROM customers
WHERE customer_id  < any (1,2,3,4);

SELECT name
FROM customers
WHERE customer_id  > any (1,2,3,4);


------------------------------------------
SELECT name
FROM customers
WHERE customer_id < ANY (
    SELECT DISTINCT customer_id
    FROM orders
    WHERE status = 'PAID'
);

----------------------
select name from customers where customer_id = any(1,2,3,4,5,6,7,8,9);
-----------------------
SELECT name
FROM customers
WHERE customer_id < ALL (
    SELECT DISTINCT customer_id
    FROM orders
    WHERE status = 'PAID'
);

Empty set (0.00 sec)
--------

SELECT name
FROM customers
WHERE customer_id > ALL (
    SELECT DISTINCT customer_id
    FROM orders
    WHERE status = 'PAID'
);
+-----------+
| name      |
+-----------+
| Esha Khan |
| Mohini    |
+-----------+
2 rows in set (0.00 sec)

----------------
SELECT name
FROM customers
WHERE customer_id = ALL (
    SELECT DISTINCT customer_id
    FROM orders
    WHERE status = 'PAID'
);
Empty set (0.00 sec)


--------------------------------
SELECT name
FROM customers c
WHERE EXISTS (
  SELECT 1 FROM orders o WHERE o.customer_id = c.customer_id
);


SELECT name
FROM customers c
WHERE not EXISTS (
  SELECT 1 FROM orders o WHERE o.customer_id = c.customer_id
);


SELECT name
FROM customers c
WHERE not EXISTS (
  SELECT 0 FROM orders o WHERE o.customer_id = c.customer_id
);


SELECT name
FROM customers c
WHERE EXISTS (
  SELECT 0 FROM orders o WHERE o.customer_id = c.customer_id
);

-------------------------------------------------


SELECT c.name
FROM customers c
WHERE (
    SELECT SUM(o.amount)
    FROM orders o
    WHERE o.customer_id = customer_id AND o.status='PAID'
) >
(
    SELECT AVG(amount) FROM orders WHERE status='PAID'
);





SELECT SUM(o.amount)
    FROM orders o inner join customers c
    WHERE o.customer_id = c.customer_id AND o.status='PAID';





-----------------------------------------------------------------


create view view_orders AS
select * from orders;


select * from view_orders;
-----------------------------------------------------
create view view_orders_1 as
select c.name, o.status from customers c inner join orders o on c.customer_id = o.customer_id;


insert into orders values (9,5,"2025-10-08",500,"NEW");

 select * from view_orders_1;

select customer_id from view_orders_1;
ERROR 1054 (42S22): Unknown column 'customer_id' in 'field list'

mysql> select amount from view_orders_1;
ERROR 1054 (42S22): Unknown column 'amount' in 'field list'

mysql> select name from view_orders_1;

------------------------------------------------------------------

update view_orders set status = "Paid" where order_id = 9;

-- changes are going to be reflected in the orders table.

----------------------------------------------------------------




SHOW FULL TABLES IN revision WHERE TABLE_TYPE LIKE 'VIEW';

show create view view_orders_1;

drop view <view_name>;

create or replace view view_orders
select amount from orders;
--------------------------------------

create index idx_order_id on orders(order_id);

select * from orders where order_id= 1;


Show all indexes on a table:

SHOW INDEX FROM customers;
SHOW INDEX FROM orders;

Delete an index:
DROP INDEX idx_city ON customers;

 Rename or recreate index:

*MySQL doesnâ€™t allow renaming directly; instead:*

DROP INDEX old_name ON table_name;
CREATE INDEX new_name ON table_name(column);

-----------------------------------------------
select * from customers where city="mumbai";

 explain select * from customers where city="mumbai";


-------------------------------------

create index idx_name_email on customers(name,email);
Query OK, 0 rows affected (0.13 sec)
Records: 0  Duplicates: 0  Warnings: 0

select * from customers where name="Amit Sharma" and email="amit@shop.com";
explain select * from customers where name="Amit Sharma" and email="amit@shop.com";


explain select * from customers where name="Amit Sharma"; - index will work
explain select * from customers where email="Amit@shop.com"; - its regular search in your table

------------------------------------------------------------------------

create table table_name () storage_engine = InnoDb;


===============================================
select * from orders;
+----------+-------------+------------+---------+-----------+
| order_id | customer_id | order_date | amount  | status    |
+----------+-------------+------------+---------+-----------+
|        1 |           1 | 2025-09-01 | 1200.00 | PAID      |
|        2 |           1 | 2025-09-10 |  750.00 | PAID      |
|        3 |           2 | 2025-09-11 |   99.00 | NEW       |
|        4 |           3 | 2025-09-12 |  560.00 | CANCELLED |
|        5 |           3 | 2025-09-20 | 2100.00 | PAID      |
|        6 |           4 | 2025-09-25 |  300.00 | PAID      |
|        7 |           5 | 2025-09-30 |  890.00 | NEW       |
|        8 |           2 | 2025-10-01 |  450.00 | PAID      |
|        9 |           5 | 2025-10-08 |  500.00 | NEW       |
+----------+-------------+------------+---------+-----------+
9 rows in set (0.00 sec)

 select * from customers;
+-------------+-------------+------------------+-----------+
| customer_id | name        | email            | city      |
+-------------+-------------+------------------+-----------+
|           1 | Amit Sharma | amit@shop.com    | Mumbai    |
|           2 | Bhavna Iyer | bhavna@shop.com  | Pune      |
|           3 | Chetan Rao  | chetan@shop.com  | Delhi     |
|           4 | Divya Menon | divya@shop.com   | Mumbai    |
|           5 | Esha Khan   | esha@shop.com    | Bengaluru |
|           6 | Mohini      | Mohini@gmail.com | Nagpur    |
+-------------+-------------+------------------+-----------+


